% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kproto.R
\name{axe-kproto}
\alias{axe-kproto}
\alias{axe_data.kproto}
\alias{axe_fitted.kproto}
\title{Axing a kproto.}
\usage{
\method{axe_data}{kproto}(x, verbose = FALSE, ...)

\method{axe_fitted}{kproto}(x, verbose = FALSE, ...)
}
\arguments{
\item{x}{A model object.}

\item{verbose}{Print information each time an axe method is executed.
Notes how much memory is released and what functions are
disabled. Default is \code{FALSE}.}

\item{...}{Any additional arguments related to axing.}
}
\value{
Axed kproto object.
}
\description{
Axing a kproto.

Remove the training data.

Remove fitted values.
}
\examples{
library(clustMixType)

## BEGIN: Generate data
# toy data set example from clustMixType::kproto
n   <- 100
prb <- 0.9
muk <- 1.5
clusid <- rep(1:4, each = n)

x1 <- sample(c("A","B"), 2*n, replace = TRUE, prob = c(prb, 1-prb))
x1 <- c(x1, sample(c("A","B"), 2*n, replace = TRUE, prob = c(1-prb, prb)))
x1 <- as.factor(x1)

x2 <- sample(c("A","B"), 2*n, replace = TRUE, prob = c(prb, 1-prb))
x2 <- c(x2, sample(c("A","B"), 2*n, replace = TRUE, prob = c(1-prb, prb)))
x2 <- as.factor(x2)

x3 <- c(rnorm(n, mean = -muk), rnorm(n, mean = muk), rnorm(n, mean = -muk), rnorm(n, mean = muk))
x4 <- c(rnorm(n, mean = -muk), rnorm(n, mean = muk), rnorm(n, mean = -muk), rnorm(n, mean = muk))

x <- data.frame(x1,x2,x3,x4)
## END: Generate data

kproto_model <- clustMixType::kproto(x = x,
                                     k=2,
                                     iter.max = 1000,
                                     nstart = 10,
                                     lambda = clustMixType::lambdaest(x = x,
                                                                      num.method = 1,
                                                                      fac.method = 1),
                                     verbose = FALSE)

streamlined_kproto <- butcher(kproto_model, verbose = TRUE)

}
